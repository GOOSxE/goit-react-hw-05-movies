{"version":3,"file":"static/js/23.dc156d7c.chunk.js","mappings":"yNAAMA,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAGAC,EAAiB,mCAAG,WAAMC,GAAN,yFACDC,MAAM,sCAAD,OAAuCD,EAAvC,YAA0DN,GAD9D,cAClBQ,EADkB,gBAELA,EAASC,OAFJ,cAElBC,EAFkB,yBAGjBA,GAHiB,2CAAH,sDAKvB,I,SCZA,GAAgB,aAAe,mCAAmC,MAAQ,4BAA4B,aAAe,mCAAmC,aAAe,mCAAmC,OAAS,8B,kBCmDnN,EA/CqB,WACnB,OAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAWC,EAAAA,EAAAA,MAAXD,OAqBR,OApBAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CACA,IAAMG,EAAqB,mCAAG,2FAC5BN,GAAa,GADe,kBAGPV,EAAkBa,GAHX,UAIE,KADtBR,EAHoB,QAIjBY,QAAQC,OAJS,sBAKlB,IAAIC,MAAM,oCALQ,OAOxBX,EAAgBH,EAAKY,SAPG,0DAU1BL,EAAS,EAAD,IACRQ,QAAQC,IAAR,MAX0B,yBAa1BX,GAAa,GAba,6EAAH,qDAgB3BM,GAjBmB,CAkBpB,GAAE,CAACH,KAEF,iBAAKS,UAAWC,EAAAA,aAAhB,WACE,eAAID,UAAWC,EAAAA,MAAf,4BACCd,IAAa,8CACH,OAAVE,IAAkB,uBAAIA,EAAMa,WAC3Bf,IAAyB,OAAZF,QAAY,IAAZA,OAAA,EAAAA,EAAcW,QAAS,IACpC,eAAII,UAAWC,EAAAA,aAAf,SACGhB,EAAakB,KAAI,SAAAC,GAChB,IAAQC,EAAwBD,EAAxBC,GAAIC,EAAoBF,EAApBE,OAAQC,EAAYH,EAAZG,QACpB,OACE,gBAAIP,UAAWC,EAAAA,aAAf,WACE,eAAGD,UAAWC,EAAAA,OAAd,sBAAoCK,EAApC,QACA,eAAGN,UAAWC,EAAAA,QAAd,cAA6BM,EAA7B,SAFoCF,EAKzC,QAKV,C","sources":["API/movieReviewsAPI.js","webpack://react-homework-template/./src/pages/MovieReviews/MovieReviews.module.css?2362","pages/MovieReviews/MovieReviews.jsx"],"sourcesContent":["const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkNWZhZGQ2ZTM1NzZhYzczYTI5YTBiZGQzY2QxODg0YyIsInN1YiI6IjY0YjI2NWJmMjNkMjc4MDEyNjE5ZTA0MSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.3G83-ZE9yN2ZrJDadqJ_dUGn7iM-UGUP6UdVEl0aij0',\n  },\n};\nconst fetchMovieReviews = async movieId => {\n  const response = await fetch(`https://api.themoviedb.org/3/movie/${movieId}/reviews`, options);\n  const data = await response.json();\n  return data;\n};\nexport default fetchMovieReviews;\n","// extracted by mini-css-extract-plugin\nexport default {\"reviews_wrap\":\"MovieReviews_reviews_wrap__+Qged\",\"title\":\"MovieReviews_title__jv7F9\",\"reviews_list\":\"MovieReviews_reviews_list__pdB8U\",\"reviews_item\":\"MovieReviews_reviews_item__sh5mf\",\"author\":\"MovieReviews_author__kkOL0\"};","import fetchMovieReviews from 'API/movieReviewsAPI';\nimport React, { useEffect, useState } from 'react';\nimport css from './MovieReviews.module.css';\nimport { useParams } from 'react-router-dom';\n\nconst MovieReviews = () => {\n  const [movieReviews, setMovieReviews] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { postId } = useParams();\n  useEffect(() => {\n    if (!postId) return;\n    const fetchMovieReviewsData = async () => {\n      setIsLoading(true);\n      try {\n        const data = await fetchMovieReviews(postId);\n        if (data.results.length === 0) {\n          throw new Error('There is no reviews information!');\n        } else {\n          setMovieReviews(data.results);\n        }\n      } catch (error) {\n        setError(error);\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieReviewsData();\n  }, [postId]);\n  return (\n    <div className={css.reviews_wrap}>\n      <h2 className={css.title}>Movie reviews:</h2>\n      {isLoading && <p>Loading content...</p>}\n      {error !== null && <p>{error.message}</p>}\n      {!isLoading && movieReviews?.length > 0 && (\n        <ul className={css.reviews_list}>\n          {movieReviews.map(review => {\n            const { id, author, content } = review;\n            return (\n              <li className={css.reviews_item} key={id}>\n                <p className={css.author}>Author: \"{author}\"</p>\n                <p className={css.content}>\"{content}\"</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default MovieReviews;\n"],"names":["options","method","headers","accept","Authorization","fetchMovieReviews","movieId","fetch","response","json","data","useState","movieReviews","setMovieReviews","isLoading","setIsLoading","error","setError","postId","useParams","useEffect","fetchMovieReviewsData","results","length","Error","console","log","className","css","message","map","review","id","author","content"],"sourceRoot":""}