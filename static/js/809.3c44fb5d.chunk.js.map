{"version":3,"file":"static/js/809.3c44fb5d.chunk.js","mappings":"2NAAMA,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAGAC,EAAc,mCAAG,WAAMC,GAAN,yFACEC,MAAM,sCAAD,OAAuCD,EAAvC,YAA0DN,GADjE,cACfQ,EADe,gBAEFA,EAASC,OAFP,cAEfC,EAFe,yBAGdA,GAHc,2CAAH,sDAKpB,I,kBCZA,GAAgB,UAAY,6BAA6B,MAAQ,yBAAyB,UAAY,6BAA6B,UAAY,6BAA6B,YAAc,+BAA+B,WAAa,8BAA8B,UAAY,8B,SC0EhR,EAtEkB,WAChB,OAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAWC,EAAAA,EAAAA,MAAXD,OAsBR,OArBAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CACA,IAAMG,EAAkB,mCAAG,2FACzBN,GAAa,GADY,kBAGJV,EAAea,GAHX,UAIE,KADnBR,EAHiB,QAIdY,KAAKC,OAJS,uBAKrBC,MAAM,iCACA,IAAIC,MAAM,iCANK,QAQrBZ,EAAaH,EAAKY,MARG,0DAWvBL,EAAS,EAAD,IACRS,QAAQC,IAAR,MAZuB,yBAcvBZ,GAAa,GAdU,6EAAH,qDAiBxBM,GAlBmB,CAmBpB,GAAE,CAACH,KAEF,iBAAKU,UAAWC,EAAAA,UAAhB,WACE,eAAID,UAAWC,EAAAA,MAAf,yBACCf,IAAa,8CACbE,GACC,uBAAIA,EAAMc,WAEThB,IACQ,OAATF,QAAS,IAATA,OAAA,EAAAA,EAAWW,QAAS,IAClB,eAAIK,UAAWC,EAAAA,UAAf,SACGjB,EAAUmB,KAAI,SAAAC,GACb,IAAQC,EAA6CD,EAA7CC,UAAWC,EAAkCF,EAAlCE,KAAMC,EAA4BH,EAA5BG,UAAWC,EAAiBJ,EAAjBI,aACpC,OACE,gBAAIR,UAAWC,EAAAA,UAAf,WACE,gBACED,UAAWC,EAAAA,YACXQ,IACED,EAAY,kDACmCA,GA7ClD,8EAgDCE,IAAKJ,EACLK,MAAO,WAET,iBAAKX,UAAWC,EAAAA,WAAhB,WACE,eAAGD,UAAWC,EAAAA,WAAd,WACE,iBAAMD,UAAWC,EAAAA,UAAjB,oBACA,iBAAMD,UAAWC,EAAAA,UAAjB,SAAiCK,QAEnC,eAAGN,UAAWC,EAAAA,WAAd,WACE,iBAAMD,UAAWC,EAAAA,UAAjB,yBACA,iBAAMD,UAAWC,EAAAA,UAAjB,SAAiCM,YAlBJF,EAuBtC,QAMZ,C","sources":["API/MovieCastAPI.js","webpack://react-homework-template/./src/pages/MovieCast/MovieCast.module.css?a7d2","pages/MovieCast/MovieCast.jsx"],"sourcesContent":["const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkNWZhZGQ2ZTM1NzZhYzczYTI5YTBiZGQzY2QxODg0YyIsInN1YiI6IjY0YjI2NWJmMjNkMjc4MDEyNjE5ZTA0MSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.3G83-ZE9yN2ZrJDadqJ_dUGn7iM-UGUP6UdVEl0aij0',\n  },\n};\nconst fetchMovieCast = async movieId => {\n  const response = await fetch(`https://api.themoviedb.org/3/movie/${movieId}/credits`, options);\n  const data = await response.json();\n  return data;\n};\nexport default fetchMovieCast;\n","// extracted by mini-css-extract-plugin\nexport default {\"cast_wrap\":\"MovieCast_cast_wrap__pCL8y\",\"title\":\"MovieCast_title__A+sTR\",\"cast_list\":\"MovieCast_cast_list__zqR34\",\"cast_item\":\"MovieCast_cast_item__oZp3o\",\"cast_poster\":\"MovieCast_cast_poster__sJzFD\",\"actor_info\":\"MovieCast_actor_info__gDBLr\",\"name_span\":\"MovieCast_name_span__EHA3t\"};","import fetchMovieCast from 'API/MovieCastAPI.js';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './MovieCast.module.css';\nconst defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\nconst MovieCast = () => {\n  const [movieCast, setMovieCast] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { postId } = useParams();\n  useEffect(() => {\n    if (!postId) return;\n    const fetchMovieCastData = async () => {\n      setIsLoading(true);\n      try {\n        const data = await fetchMovieCast(postId);\n        if (data.cast.length === 0) {\n          alert('There is no cast information!');\n          throw new Error('There is no cast information!');\n        } else {\n          setMovieCast(data.cast);\n        }\n      } catch (error) {\n        setError(error);\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieCastData();\n  }, [postId]);\n  return (\n    <div className={css.cast_wrap}>\n      <h2 className={css.title}>Movie Cast:</h2>\n      {isLoading && <p>Loading content...</p>}\n      {error ? (\n        <p>{error.message}</p>\n      ) : (\n        !isLoading &&\n        movieCast?.length > 0 && (\n          <ul className={css.cast_list}>\n            {movieCast.map(actor => {\n              const { credit_id, name, character, profile_path } = actor;\n              return (\n                <li className={css.cast_item} key={credit_id}>\n                  <img\n                    className={css.cast_poster}\n                    src={\n                      profile_path\n                        ? `https://www.themoviedb.org/t/p/original/${profile_path}`\n                        : defaultImg\n                    }\n                    alt={name}\n                    width={'150px'}\n                  />\n                  <div className={css.actor_info}>\n                    <p className={css.actor_name}>\n                      <span className={css.name_span}>Name:</span>\n                      <span className={css.name_span}>{name}</span>\n                    </p>\n                    <p className={css.actor_name}>\n                      <span className={css.name_span}>Character:</span>\n                      <span className={css.name_span}>{character}</span>\n                    </p>\n                  </div>\n                </li>\n              );\n            })}\n          </ul>\n        )\n      )}\n    </div>\n  );\n};\n\nexport default MovieCast;\n"],"names":["options","method","headers","accept","Authorization","fetchMovieCast","movieId","fetch","response","json","data","useState","movieCast","setMovieCast","isLoading","setIsLoading","error","setError","postId","useParams","useEffect","fetchMovieCastData","cast","length","alert","Error","console","log","className","css","message","map","actor","credit_id","name","character","profile_path","src","alt","width"],"sourceRoot":""}